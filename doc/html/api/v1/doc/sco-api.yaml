swagger: "2.0"

info:
  version: 0.10.0
  title: Standard Cortical Observer Web API
  description: API to access and manipulate resources managed by the Standard Cortical Observer Data Store, Model Repository, and Predictive Model Engine
  license:
    name: GNU GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html

schemes:
  - http
host: cds-jaw.cims.nyu.edu
basePath: /sco-server/api/v1

paths:
    /:
        get:
            summary: API Overview
            description: Overview of Web API and links to relevant resources and methods
            operationId: overview
            tags:
                - overview
            produces:
              - application/json
            responses:
                200:
                    description: Simple descriptive object
                    schema:
                        type: object
                        required:
                            - name
                            - title
                            - overview
                            - resources
                            - links
                        properties:
                            name:
                                type: string
                            title:
                                type: string
                            overview:
                                type: object
                                required:
                                    - title
                                    - content
                                properties:
                                    title:
                                        type: string
                                    content:
                                        type: string
                            resources:
                                type: object
                                required:
                                    - imageGroupOptions
                                    - models
                                properties:
                                    imageGroupOptions:
                                        type: array
                                        items:
                                            $ref: '#/definitions/ParameterDefinition'
                                    models:
                                        type: array
                                        items:
                                            $ref: '#/definitions/ModelDescriptor'
                            links:
                                type: array
                                items:
                                    $ref: "#/definitions/Reference"
    /experiments:
        get:
            summary: List experiments
            description: List of experiment objects
            operationId: listExperiments
            tags:
                - experiment
            parameters:
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of experiments
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
        post:
            summary: Create experiment
            description: Create new experiment object
            operationId: createExperiment
            tags:
                - experiment
            parameters:
                - name: experiment
                  in: body
                  required: true
                  description: Experiment definition containing name, subject, image group, and optional fMRI data references
                  schema:
                      type: object
                      required:
                          - subject
                          - images
                          - properties
                      properties:
                          subject:
                              type: string
                          images:
                              type: string
                          properties:
                              $ref: "#/definitions/UpsertProperties"
            consumes:
                - application/json
            produces:
                - application/json
            responses:
                201:
                    description: Experiment object created
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid request body
    /experiments/{experimentId}:
        get:
            summary: Get experiment
            description: Get experiment object with given identifier
            operationId: getExperiment
            tags:
                - experiment
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Experiment object
                    schema:
                        $ref: "#/definitions/ExperimentHandle"
                404:
                    description: Unknown experiment
        delete:
            summary: Delete experiment
            description: Delete experiment object from database
            operationId: deleteExperiment
            tags:
                - experiment
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown experiment
    /experiments/{experimentId}/properties:
        post:
            summary: Update experiment property
            description: Insert, delete, or update property of experiment object
            operationId: upsertExperimentProperty
            tags:
                - experiment
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown experiment
    /experiments/{experimentId}/fmri:
        get:
            summary: Get fMRI data
            description: Get functional MRI data object associated with with given experiment
            operationId: getExperimentFMRI
            tags:
                - experiment
                - functional data
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Functional MRI data object
                    schema:
                        $ref: "#/definitions/ObjectHandle"
                404:
                    description: Unknown functional MRI data object
        post:
            summary: Upload fMRI data
            description: Upload associated functional MRI data for experiment object
            operationId: uploadFMRI
            tags:
                - experiment
                - functional data
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: file
                  in: formData
                  required: true
                  description: Functional MRI data archive file
                  type: file
            consumes:
                - multipart/form-data
            produces:
                - application/json
            responses:
                201:
                    description: Upload successful; object(s) created
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid file or request
                404:
                    description: Unknown experiment
        delete:
            summary: Delete fMRI data
            description: Delete fMRI data associated with given experiment
            operationId: deleteExperimentFMRI
            tags:
                - experiment
                - functional data
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown experiment or fMRI data object
    /experiments/{experimentId}/fmri/{filename}:
        get:
            summary: Download fMRI data file
            description: Download original functional MRI data file for object associated with given experiment
            operationId: downloadExperimentFMRI
            tags:
                - experiment
                - functional data
                - download
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: filename
                  in: path
                  required: true
                  description: Name of the file to download
                  type: string
            produces:
                - application/gzip
                - application/x-tar
            responses:
                200:
                    description: File object
                    schema:
                        type: file
                404:
                    description: File not found
    /experiments/{experimentId}/fmri/properties:
        post:
            summary: Update fMRI data property
            description: Insert, delete, or update property of functional MRI data object associated with given experiment
            operationId: upsertExperimentFMRIProperty
            tags:
                - experiment
                - functional data
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown functional MRI data object
    /experiments/{experimentId}/predictions:
        get:
            summary: List predictions
            description: List all predictions that are part of a particular experiment
            operationId: listExperimentPredictions
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of predictions
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
                404:
                    description: Unknown experiment
        post:
            summary: Run Experiment
            description: Start a model run for a given experiment
            operationId: createExperimentPrediction
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: Run Definition
                  in: body
                  required: true
                  description: Run name and list of arguments and properties
                  schema:
                      type: object
                      required:
                          - name
                          - model
                          - arguments
                      properties:
                          name:
                              type: string
                          model:
                              type: string
                          arguments:
                              type: array
                              items:
                                  $ref: "#/definitions/Attribute"
                          properties:
                              $ref: "#/definitions/UpsertProperties"
            responses:
                201:
                    description: Model run started
                    schema:
                        $ref: "#/definitions/PredictionHandle"
                400:
                    description: Invalid arguments
                404:
                    description: Unknown experiment
    /experiments/{experimentId}/predictions/{predictionId}:
        get:
            summary: Get prediction
            description: Get prediction for experiment with given identifiers
            operationId: getExperimentPrediction
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Prediction object
                    schema:
                        $ref: "#/definitions/PredictionHandle"
                404:
                    description: Unknown experiment or prediction
        delete:
            summary: Delete prediction
            description: Delete prediction model run from experiment object
            operationId: deleteExperimentPrediction
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown experiment or prediction
    /experiments/{experimentId}/predictions/{predictionId}/result:
        get:
            summary: Download prediction result
            description: Download results produced by the predictive model
            operationId: downloadExperimentPrediction
            tags:
                - experiment
                - prediction
                - download
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
            produces:
                - application/gzip
                - application/x-tar
            responses:
                200:
                    description: File object
                    schema:
                        type: file
                404:
                    description: Unknown experiment or prediction
    /experiments/{experimentId}/predictions/{predictionId}/properties:
        post:
            summary: Upsert prediction property
            description: Insert, delete, or update property of prediction object
            operationId: upsertExperimentPredictionProperty
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown experiment or prediction
    /experiments/{experimentId}/predictions/{predictionId}/attachments/{resourceId}:
        get:
            summary: Downlaod model run attachment
            description: Download file that contains results from a model run post-processing step
            operationId: downloadModelRunAttachment
            tags:
                - experiment
                - download
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
                - name: resourceId
                  in: path
                  required: true
                  description: Unique (relative) identifier of resource
                  type: string
            produces:
                - text/csv
                - text/tab-separated-values
            responses:
                200:
                    description: Model run resource file
                    schema:
                        type: file
                404:
                    description: Unknown experiment, prediction, or resource
        post:
            summary: Upload model run attachment
            description: Upload model run post-processing result file
            operationId: uploadModelRunAttachment
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
                - name: resourceId
                  in: path
                  required: true
                  description: Unique (relative) identifier of resource
                  type: string
                - name: file
                  in: formData
                  required: true
                  description: Model run result file
                  type: file
            consumes:
                - multipart/form-data
            responses:
                200:
                    description: Upload successful; object(s) created
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid state update attempt
                404:
                    description: Unknown experiment, prediction, or resource
        delete:
            summary: Delete model run attachment
            description: Delete attached post-processing result from model run
            operationId: deleteModelRunAttachment
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
                - name: resourceId
                  in: path
                  required: true
                  description: Unique (relative) identifier of resource
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown experiment, prediction, or resource
    /experiments/{experimentId}/predictions/{predictionId}/state/active:
        post:
            summary: Run state active
            description: Update state of a predictive model run to active
            operationId: updateExperimentPredictionStateActive
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
            responses:
                200:
                    description: State updated
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid state update attempt
                404:
                    description: Unknown experiment or prediction
    /experiments/{experimentId}/predictions/{predictionId}/state/error:
        post:
            summary: Run state failed
            description: Update state of a predictive model run to failed
            operationId: updateExperimentPredictionStateFailed
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
                - name: state
                  in: body
                  required: true
                  description: Error messages for failed state
                  schema:
                      type: object
                      required:
                          - errors
                      properties:
                          errors:
                              type: array
                              items:
                                  type: string
            responses:
                200:
                    description: State updated
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid state update attempt
                404:
                    description: Unknown experiment or prediction
    /experiments/{experimentId}/predictions/{predictionId}/state/success:
        post:
            summary: Run state success
            description: Update state of a predictive model run success and upload run results
            operationId: updateExperimentPredictionStateSuccess
            tags:
                - experiment
                - prediction
            parameters:
                - name: experimentId
                  in: path
                  required: true
                  description: Unique identifier of experiment object
                  type: string
                - name: predictionId
                  in: path
                  required: true
                  description: Unique (relative) identifier of prediction object
                  type: string
                - name: file
                  in: formData
                  required: true
                  description: Model run result file
                  type: file
            consumes:
                - multipart/form-data
            responses:
                200:
                    description: State updated
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid state update attempt
                404:
                    description: Unknown experiment or prediction
    /images/files:
        get:
            summary: List images
            description: List of image objects
            operationId: listImage
            tags:
                - image
            parameters:
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of image objects
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
    /images/files/{imageId}:
        get:
            summary: Get image
            description: Get image object with given identifier
            operationId: getImage
            tags:
                - image
            parameters:
                - name: imageId
                  in: path
                  required: true
                  description: Unique identifier of image object
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Subject object
                    schema:
                        $ref: "#/definitions/ObjectHandle"
                404:
                    description: Unknown image object
        delete:
            summary: Delete image object
            description: Delete image object from database
            operationId: deleteImage
            tags:
                - image
            parameters:
                - name: imageId
                  in: path
                  required: true
                  description: Unique identifier of image object
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown image object
    /images/files/{imageId}/properties:
        post:
            summary: Update image property
            description: Insert, delete, or update property of image object
            operationId: upsertImageProperty
            tags:
                - image
            parameters:
                - name: imageId
                  in: path
                  required: true
                  description: Unique identifier of image object
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown image object
    /images/files/{imageId}/{filename}:
        get:
            summary: Download image file
            description: Download single image file for object with given identifier
            operationId: downloadImage
            tags:
                - image
                - download
            parameters:
                - name: imageId
                  in: path
                  required: true
                  description: Unique identifier of image object
                  type: string
                - name: filename
                  in: path
                  required: true
                  description: Name of the file to download
                  type: string
            produces:
                - image/jpeg
                - image/png
                - image/gif
            responses:
                200:
                    description: File object
                    schema:
                        type: file
                404:
                    description: File not found
    /images/groups:
        get:
            summary: List image groups
            description: List of image group objects
            operationId: listImageGroup
            tags:
                - image
            parameters:
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of image group objects
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
    /images/groups/options:
        get:
            summary: Image group options definitions
            description: List definition of all supported image group options
            operationId: listImageGroupOptions
            tags:
                - image
            produces:
                - application/json
            responses:
                200:
                    description: List of options
                    schema:
                        type: object
                        required:
                            - options
                        properties:
                            options:
                                type: array
                                items:
                                    $ref: '#/definitions/ParameterDefinition'
    /images/groups/{imageGroupId}:
        get:
            summary: Get image group
            description: Get image group object with given identifier
            operationId: getImageGroup
            tags:
                - image
            parameters:
                - name: imageGroupId
                  in: path
                  required: true
                  description: Unique identifier of image group object
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Image group object
                    schema:
                        $ref: "#/definitions/ImageGroupHandle"
                404:
                    description: Unknown image group
        delete:
            summary: Delete image group object
            description: Delete image group object from database
            operationId: deleteImageGroup
            tags:
                - image
            parameters:
                - name: imageGroupId
                  in: path
                  required: true
                  description: Unique identifier of image group object
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown image group
    /images/groups/{imageGroupId}/{filename}}:
        get:
            summary: Download image groups
            description: Download image groups file for object with given identifier
            operationId: downloadImage
            tags:
                - image
                - download
            parameters:
                - name: imageGroupId
                  in: path
                  required: true
                  description: Unique identifier of image group object
                  type: string
                - name: filename
                  in: path
                  required: true
                  description: Name of the file to download
                  type: string
            produces:
                - application/gzip
                - application/x-tar
            responses:
                200:
                    description: File object
                    schema:
                        type: file
                404:
                    description: File not found
    /images/groups/{imageGroupId}/images:
        get:
            summary: List images in group
            description: Listing for images in an image group
            operationId: imageGroupListImages
            tags:
                - image
            parameters:
                - name: imageGroupId
                  in: path
                  required: true
                  description: Unique identifier of image group object
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of images
                    schema:
                        $ref: "#/definitions/GroupImageListing"
                400:
                    description: Invalid arguments
                404:
                    description: Unknown image group
    /images/groups/{imageGroupId}/options:
        post:
            summary: Update image group options
            description: Update set of options of image group object
            operationId: updateImageGroupOptions
            tags:
                - image
            parameters:
                - name: imageGroupId
                  in: path
                  required: true
                  description: Unique identifier of image group object
                  type: string
                - name: options
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      type: object
                      required:
                          - options
                      properties:
                          options:
                              type: array
                              items:
                                  $ref: "#/definitions/Attribute"
            responses:
                200:
                    description: Property updated
                404:
                    description: Unknown image group
    /images/groups/{imageGroupId}/properties:
        post:
            summary: Update image group property
            description: Insert, delete, or update property of image group object
            operationId: upsertImageGroupProperty
            tags:
                - image
            parameters:
                - name: imageGroupId
                  in: path
                  required: true
                  description: Unique identifier of image group object
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown image group
    /images/upload:
        post:
            summary: Create image or image group via file upload
            description: Upload a single file image or tar-file of images
            operationId: uploadImages
            tags:
                - image
            parameters:
                - name: file
                  in: formData
                  required: true
                  description: Image or archive file
                  type: file
            consumes:
                - multipart/form-data
            produces:
                - application/json
            responses:
                201:
                    description: Upload successful; object(s) created
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid file or request
    /models:
        get:
            summary: List models
            description: List of registed models in the repository
            operationId: listModels
            tags:
                - model
            parameters:
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of model descriptors
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
        post:
            summary: Register model
            description: Register a new model with the workflow engine
            operationId: registerModel
            tags:
                - model
            parameters:
                - name: model
                  in: body
                  required: true
                  description: Definition of the new model
                  schema:
                      $ref: "#/definitions/ModelDefinition"
            produces:
                - application/json
            responses:
                200:
                    description: New model descriptors
                    schema:
                        $ref: "#/definitions/ModelDescriptor"
                400:
                    description: Invalid model definition
    /models/{modelId}:
        get:
            summary: Get model
            description: Get model with given identifier
            operationId: getModel
            tags:
                - model
            parameters:
                - name: modelId
                  in: path
                  required: true
                  description: Unique model identifier
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Model object
                    schema:
                        $ref: "#/definitions/ModelDescriptor"
                404:
                    description: Unknown model
        delete:
            summary: Delete model
            description: Delete a model from the registry
            operationId: deleteModel
            tags:
                - model
            parameters:
                - name: modelId
                  in: path
                  required: true
                  description: Unique model identifier
                  type: string
            responses:
                204:
                    description: Model deleted
                404:
                    description: Unknown model
    /models/{modelId}/connector:
        post:
            summary: Update model connector
            description: Update connector information for a given model description
            operationId: updateModelConnector
            tags:
                - model
            parameters:
                - name: modelId
                  in: path
                  required: true
                  description: Unique model identifier
                  type: string
                - name: connector
                  in: body
                  required: true
                  description: New connector information
                  schema:
                      $ref: "#/definitions/Connector"
            responses:
                200:
                    description: Model connector updated
                    schema:
                        $ref: "#/definitions/ModelDescriptor"
                400:
                    description: Invalid connector information
                404:
                    description: Unknown model
    /models/{modelId}/properties:
        post:
            summary: Update model property
            description: Insert, delete, or update property of model description
            operationId: upsertModelProperty
            tags:
                - model
            parameters:
                - name: modelId
                  in: path
                  required: true
                  description: Unique model identifier
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown model
    /subjects:
        get:
            summary: List subjects
            description: List of brain anatomy MRI objects
            operationId: listSubjects
            tags:
                - subject
            parameters:
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of subject anatomy objects
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
        post:
            summary: Create subject via file upload
            description: Upload a brain anatomy MRI archive (Freesurfer directory)
            operationId: uploadSubject
            tags:
                - subject
            parameters:
                - name: file
                  in: formData
                  required: true
                  description: Freesurfer directory archive file
                  type: file
            consumes:
                - multipart/form-data
            produces:
                - application/json
            responses:
                201:
                    description: Upload successful; object(s) created
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid file or request
    /subjects/{subjectId}:
        get:
            summary: Get subject
            description: Get brain anatomy MRI object with given identifier
            operationId: getSubject
            tags:
                - subject
            parameters:
                - name: subjectId
                  in: path
                  required: true
                  description: Unique identifier of subject
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Subject object
                    schema:
                        $ref: "#/definitions/ObjectHandle"
                404:
                    description: Unknown subject
        delete:
            summary: Delete subject
            description: Delete brain anatomy MRI object from database
            operationId: deleteSubject
            tags:
                - subject
            parameters:
                - name: subjectId
                  in: path
                  required: true
                  description: Unique identifier of subject
                  type: string
            responses:
                204:
                    description: Object deleted
                404:
                    description: Unknown subject
    /subjects/{subjectId}/properties:
        post:
            summary: Update subject property
            description: Insert, delete, or update property of subject
            operationId: upsertSubjectProperty
            tags:
                - subject
            parameters:
                - name: subjectId
                  in: path
                  required: true
                  description: Unique identifier of subject
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown subject
    /subjects/{subjectId}/{filename}:
        get:
            summary: Download anatomy file
            description: Download original anatomy file for object with given identifier
            operationId: downloadSubject
            tags:
                - subject
                - download
            parameters:
                - name: subjectId
                  in: path
                  required: true
                  description: Unique identifier of subject
                  type: string
                - name: filename
                  in: path
                  required: true
                  description: Name of the file to download
                  type: string
            produces:
                - application/gzip
                - application/x-tar
            responses:
                200:
                    description: File object
                    schema:
                        type: file
                404:
                    description: File not found
    /widgets:
        get:
            summary: List widgets
            description: List of visualization widgets in the database
            operationId: listWidgets
            tags:
                - widget
            parameters:
                - name: offset
                  in: query
                  required: false
                  description: Offset position for items in listing
                  type: integer
                - name: limit
                  in: query
                  required: false
                  description: Limit number of returned items
                  type: integer
                - name: properties
                  in: query
                  required: false
                  description: Comma-separated list of properties to be included in result
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: List of widget descriptors
                    schema:
                        $ref: "#/definitions/ObjectListing"
                400:
                    description: Invalid arguments
        post:
            summary: Create widget
            description: Create a new visualization widget in the database
            operationId: createWidget
            tags:
                - widget
            parameters:
                - name: widget
                  in: body
                  required: true
                  description: Definition of the new widget
                  schema:
                      $ref: "#/definitions/WidgetDefinition"
            produces:
                - application/json
            responses:
                201:
                    description: New widget descriptors
                    schema:
                        $ref: "#/definitions/OpResult"
                400:
                    description: Invalid widget definition
    /widgets/{widgetId}:
        get:
            summary: Get widget
            description: Get visualization widget with given identifier
            operationId: getWidget
            tags:
                - widget
            parameters:
                - name: widgetId
                  in: path
                  required: true
                  description: Unique widget identifier
                  type: string
            produces:
                - application/json
            responses:
                200:
                    description: Widget object
                    schema:
                        $ref: "#/definitions/WidgetDescriptor"
                404:
                    description: Unknown widget
        delete:
            summary: Delete widget
            description: Delete a visualization widget from the database
            operationId: deleteWidget
            tags:
                - widget
            parameters:
                - name: widgetId
                  in: path
                  required: true
                  description: Unique widget identifier
                  type: string
            responses:
                204:
                    description: Widget deleted
                404:
                    description: Unknown widget
        post:
            summary: Update widget
            description: Update code and input list for visualization widget
            operationId: updateWidget
            tags:
                - widget
            parameters:
                - name: widgetId
                  in: path
                  required: true
                  description: Unique widget identifier
                  type: string
                - name: descriptor
                  in: body
                  required: true
                  description: Updated code and/or input list
                  schema:
                      type: object
                      properties:
                          code:
                              type: object
                          inputs:
                              type: array
                              items:
                                  $ref: "#/definitions/WidgetInput"
            responses:
                200:
                    description: Widget updated
                    schema:
                        $ref: "#/definitions/WidgetDescriptor"
                400:
                    description: Invalid update content
                404:
                    description: Unknown widget
    /widgets/{widgetId}/inputs:
        post:
            summary: Add input descriptor
            description: Add an input descriptor for a visualization widget
            operationId: addWidgetInput
            tags:
                - widget
            parameters:
                - name: widgetId
                  in: path
                  required: true
                  description: Unique widget identifier
                  type: string
                - name: descriptor
                  in: body
                  required: true
                  description: Input descriptor
                  schema:
                      $ref: "#/definitions/WidgetInput"
            responses:
                200:
                    description: Widget input list updated
                    schema:
                        $ref: "#/definitions/WidgetDescriptor"
                400:
                    description: Invalid input descriptor
                404:
                    description: Unknown widget
    /widgets/{widgetId}/properties:
        post:
            summary: Update widget property
            description: Insert, delete, or update property of visualization widget
            operationId: upsertWidgetProperty
            tags:
                - widget
            parameters:
                - name: widgetId
                  in: path
                  required: true
                  description: Unique widget identifier
                  type: string
                - name: property
                  in: body
                  required: true
                  description: Key-value pair defining property and new value
                  schema:
                      $ref: "#/definitions/UpsertPropertiesRequest"
            responses:
                200:
                    description: Property updated
                400:
                    description: Attempt to update read-only property or delete mandatory property
                404:
                    description: Unknown widget
definitions:
    Attribute:
        type: object
        required:
            - name
            - value
        properties:
            name:
                type: string
            value:
                type: string
    BaseObjectHandle:
        type: object
        required:
            - id
            - timestamp
            - name
            - links
        properties:
            id:
                type: string
            timestamp:
                type: string
            name:
                type: string
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
    Connector:
        type: object
        required:
            - connector
        properties:
            connector:
                type: string
            host:
                type: string
            port:
                type: integer
            virtualHost:
                type: string
            queue:
                type: string
            user:
                type: string
            password:
                type: string
    ExperimentHandle:
        allOf:
            - $ref: "#/definitions/ObjectHandle"
            - properties:
                subject:
                    type: object
                    $ref: "#/definitions/ObjectHandle"
                images:
                    type: object
                    $ref: "#/definitions/ImageGroupHandle"
                fmri:
                    type: object
                    $ref: "#/definitions/ObjectHandle"
    GroupImage:
        type: object
        required:
            - id
            - name
            - folder
            - links
        properties:
            id:
                type: string
            name:
                type: string
            folder:
                type: string
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
    GroupImageListing:
        type: object
        required:
            - offset
            - limit
            - count
            - totalCount
            - items
            - links
        properties:
            offset:
                type: integer
            limit:
                type: integer
            count:
                type: integer
            totalCount:
                type: integer
            items:
                type: array
                items:
                    $ref: "#/definitions/GroupImage"
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
    ImageGroupHandle:
        allOf:
            - $ref: "#/definitions/ObjectHandle"
            - properties:
                images:
                    type: object
                    required:
                        - count
                        - links
                    properties:
                        count:
                            type: integer
                        links:
                            type: array
                            items:
                                $ref: "#/definitions/Reference"
                options:
                    type: array
                    items:
                        $ref: "#/definitions/Attribute"
    KeyValuePair:
        type: object
        required:
            - key
        properties:
            key:
                type: string
            value:
                type: string
    ModelDefinition:
        type: object
        required:
            - id
            - properties
            - parameters
            - outputs
            - connector
        properties:
            id:
                type: string
            properties:
                $ref: "#/definitions/UpsertProperties"
            parameters:
                type: array
                items:
                    $ref: '#/definitions/ParameterDefinition'
            outputs:
                $ref: "#/definitions/ModelOutputs"
            connector:
                type: object
    ModelDescriptor:
        type: object
        required:
            - id
            - name
            - parameters
            - outputs
            - connector
            - links
        properties:
            id:
                type: string
            name:
                type: string
            description:
                type: string
            parameters:
                type: array
                items:
                    $ref: '#/definitions/ParameterDefinition'
            outputs:
                $ref: "#/definitions/ModelOutputs"
            connector:
                $ref: "#/definitions/Connector"
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
    ModelOutputs:
        type: object
        required:
            - prediction
            - attachments
        properties:
            prediction:
                $ref: "#/definitions/ModelOutputFile"
            attachments:
                type: array
                items:
                    $ref: "#/definitions/ModelOutputFile"
    ModelOutputFile:
        type: object
        required:
            - filename
            - mimeType
        properties:
            filename:
                type: string
            mimeType:
                type: string
            path:
                type: string
    ModelResourceDescriptor:
        type: object
        required:
            - id
            - type
        properties:
            id:
                type: string
            type:
                type: object
                required:
                    - id
                properties:
                    id:
                        type: string
                    format:
                        type: string
    ObjectHandle:
        allOf:
            - $ref: "#/definitions/BaseObjectHandle"
            - properties:
                properties:
                    type: array
                    items:
                        $ref: "#/definitions/KeyValuePair"
    ObjectListing:
        type: object
        required:
            - offset
            - limit
            - count
            - totalCount
            - items
            - links
        properties:
            offset:
                type: integer
            limit:
                type: integer
            count:
                type: integer
            totalCount:
                type: integer
            items:
                type: array
                items:
                    $ref: "#/definitions/BaseObjectHandle"
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
    OpResult:
        type: object
        required:
            - result
            - links
        properties:
            result:
                type: string
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
    ParameterDefinition:
        type: object
        required:
            - id
            - name
            - type
        properties:
            id:
                type: string
            name:
                type: string
            description:
                type: string
            type:
                type: object
                required:
                    - name
                properties:
                    name:
                        type: string
                    values:
                        type: array
                        items:
                            type: string
    PredictionHandle:
        allOf:
            - $ref: "#/definitions/ObjectHandle"
            - properties:
                model:
                    $ref: "#/definitions/ModelDescriptor"
                experiment:
                    $ref: "#/definitions/ExperimentHandle"
                arguments:
                    type: array
                    items:
                        $ref: "#/definitions/Attribute"
                state:
                    type: string
                errors:
                    type: array
                    items:
                        type: string
                attachments:
                    type: array
                    items:
                        type: object
                        required:
                            - id
                            - filesize
                            - links
                        properties:
                            id:
                                type: string
                            filesize:
                                type: integer
                            links:
                                type: array
                                items:
                                    $ref: "#/definitions/Reference"
                widgets:
                    type: array
                    items:
                        type: object
                        required:
                            - engine
                            - title
                            - code
                        properties:
                            engine:
                                type: string
                            title:
                                type: string
                            code:
                                type: object
    Reference:
        type: object
        required:
            - rel
            - href
        properties:
            rel:
                type: string
            href:
                type: string
    RunState:
        type: object
        required:
            - type
        properties:
            type:
                type: string
            errors:
                type: array
                items:
                    type: string
            modelOutput:
                type: string
    UpsertProperties:
        type: array
        items:
            $ref: "#/definitions/KeyValuePair"
    UpsertPropertiesRequest:
        type: object
        required:
            - properties
        properties:
            properties:
                $ref: "#/definitions/UpsertProperties"
    WidgetDefinition:
        type: object
        required:
            - engine
            - code
            - inputs
            - properties
        properties:
            engine:
                type: string
            code:
                type: object
            inputs:
                type: array
                items:
                    $ref: "#/definitions/WidgetInput"
            properties:
                $ref: "#/definitions/UpsertProperties"
    WidgetInput:
        type: object
        required:
            - model
            - attachment
        properties:
            model:
                type: string
            attachment:
                type: string
    WidgetDescriptor:
        type: object
        required:
            - id
            - name
            - timestamp
            - engine
            - code
            - inputs
            - properties
            - links
        properties:
            id:
                type: string
            engine:
                type: string
            code:
                type: object
            inputs:
                type: array
                items:
                    $ref: "#/definitions/WidgetInput"
            properties:
                $ref: "#/definitions/UpsertProperties"
            links:
                type: array
                items:
                    $ref: "#/definitions/Reference"
